openapi: 3.0.3
info:
  title: PrivTAP
  description: |-
    Privacy preserving Trigger-Action Platform.
  termsOfService: https://privtap.it/terms/
  contact:
    email: contact@privtap.it
  license:
    name: GNU GPLv2
    url: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html
  version: 0.3.0
servers:
  - url: https://privtap.it/api
tags:
  - name: Authentication
    description: Endpoints for authenticating users
  - name: Services Management
    description: Endpoints for creating and modifying services that provides triggers and/or actions
  - name: Rules Management
    description: Endpoints for creating and modifying trigger-action rules
  - name: OSP Authorization
    description: Endpoints for authorizing services on behalf of users
  - name: Rules Execution
    description: Endpoints for executing trigger-action rules defined by users
security:
  - auth: []
paths:
  /register:
    post:
      security: []
      tags:
        - Authentication
      summary: New user register to the platform
      description: OSP and end-user register to the platform (TODO)
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '200':
          description: Successful operation
  /login:
    post:
      security: []
      tags:
        - Authentication
      summary: Registered user log-in to the platform
      description: OSP and end-user log-in to the platform (TODO)
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: successful operation
          headers:
            Set-Cookie:
              schema:
                type: string
                example: _jwt=a_jwt_token; Path=/; HttpOnly; Secure
        '400':
          description: Invalid status value
  /logout:
    get:
      tags:
        - Authentication
      summary: OSP and end-user log-out from the platform
      description: OSP and end-user log-out from the platform (TODO)
      operationId: logout
      responses:
        '200':
          description: Successful logout, delete the _jwt cookie from the user's browser
        '400':
          description: Invalid tag value
  /activate:
    post:
      security: []
      tags:
        - Authentication
      summary: Activates the account of a user
      description: Once a user registers a new account, he will receive an activation token. That token needs to be sent here to access the full functionalities of the platform.
      operationId: activate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: 823217d03a2d149c7d3c8c8f3235d62dcc7047730990f405b7f0feb104ce7c3ec7899ddbf0562558af9e0de7e71953456e840925556c494492e7c876c8f47413
      responses:
        '200':
          description: The request was successful
        '400':
          description: The token is not valid

  /rules:
    get:
      tags:
        - Rules Management
      summary: The end-user requests the set of rules already defined
      description: The end-user requests the set of rules already defined (TODO)
      operationId: get-rules
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rules'
    post:
      tags:
        - Rules Management
      summary: The end-user defines a new rule
      description: The end-user defines a new rule (TODO)
      operationId: post-rules
      parameters:
        - name: sessionID
          required: true
          in: cookie
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRule'
      responses:
        '405':
          description: Invalid input

    delete:
      tags:
        - Rules Management
      summary: The end-user deletes an already defined rule
      description: The end-user deletes an already defined rule (TODO)
      operationId: delete-rules
      parameters:
        - name: ruleID
          in: query
          schema:
            type: string
      responses:
        '200':
          description: successful operation

  /services:
    get:
      tags:
        - OSP Authorization
      summary: The end-user requests a list of OSP
      description: The end-user requests a list of OSP (TODO)
      operationId: services
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserService'

  /triggers:
    get:
      tags:
        - Rules Management
      summary:  Gets a list of available triggers
      description: Returns a list of triggers offered by services that the user has authorized. The triggers will be grouped by the service that is providing them. The results can be filtered with a search query.
      operationId: triggers
      parameters:
        - name: search
          description: Search query that will restrict the result to only triggers whose name or description matches it
          in: query
          schema:
            type: string
      responses:
        '200':
          description: The request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    serviceName:
                      type: string
                      example: SensorService
                    serviceID:
                      type: string
                      example: 025ccd4951hld089ba219okl
                    triggers:
                      type: array
                      items:
                        $ref: '#/components/schemas/Trigger'

  /actions:
    get:
      tags:
        - Rules Management
      summary: Gets a list of available actions
      description: Returns a list of actions offered by services that the user has authorized. The actions will be grouped by the service that is providing them. The results can be filtered with a search query.
      operationId: actions
      parameters:
        - name: search
          description: Search query that will restrict the result to only actions whose name or description matches it
          in: query
          schema:
            type: string
      responses:
        '200':
          description: The request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    serviceName:
                      type: string
                      example: NotificationService
                    serviceID:
                      type: string
                      example: 025ccd4951hld089ba219okl
                    actions:
                      type: array
                      items:
                        $ref: '#/components/schemas/Action'

  /service-authorization:
    get:
      tags:
        - OSP Authorization
      summary: The end-user request a set of authorization already granted
      description: The end-user request a set of authorization already granted (TODO)
      operationId: get-service-autorization
      parameters:
        - name: serviceID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'
    post:
      tags:
        - OSP Authorization
      summary: The end-user grants a new authorization
      description: The end-user grants a new authorization (TODO)
      operationId: post-service-autorization

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAuthorization'
      responses:
        '200':
          description: successful operation
    delete:
      tags:
        - OSP Authorization
      summary: The end-user deletes all the permissions associated to an OSP
      description: The end-user deletes all the permissions associated to an OSP (TODO)
      operationId: delete-service-autorization
      parameters:
        - name: serviceID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
  /manage-services:
    get:
      tags:
        - Services Management
      summary: The OSP requests a list of already defined services
      description: The OSP requests a list of already defined services (TODO)
      operationId: get-manage-services
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
    post:
      tags:
        - Services Management
      summary: The OSP defines a new service
      description: The OSP defines a new service (TODO)
      operationId: post-manage-services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewService'
      responses:
        '200':
          description: successful operation

    delete:
      tags:
        - Services Management
      summary: The OSP deletes an already defined service
      description: The OSP deletes an already defined service (TODO)
      operationId: delete-manage-services
      parameters:
        - name: serviceID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
  /triggers-data:
    post:
      tags:
        - Rules Execution
      summary: The OSP sends data to activate a registered trigger
      description: The OSP sends data to activate a registered trigger (TODO)
      operationId: post-triggers-data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerData'
      responses:
        '200':
          description: successful operation
  /oauth-redirect:
    get:
      tags:
        - OSP Authorization
      summary: The end-user gets redirected to the specified uri
      description: The end-user gets redirected to the specified uri (TODO)
      operationId: get-oauth-redirect
      parameters:
        - name: oauth-param
          in: cookie
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
  /manage-triggers:
    get:
      tags:
        - Services Management
      summary: The OSP requests the set of already specified triggers
      description: The OSP requests the set of already specified triggers (TODO)
      operationId: get-manage-triggers
      parameters:
        - name: triggerID
          in: query
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trigger'
    post:
      tags:
        - Services Management
      summary: The OSP defines a new trigger service which has as implicit endpoint /trigger-data
      description: The OSP defines a new trigger service which has as implicit endpoint /trigger-data (TODO)
      operationId: post-manage-triggers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
      responses:
        '200':
          description: successful operation
    delete:
      tags:
        - Services Management
      summary: The OSP deletes an already defined trigger
      description: The OSP deletes an already defined trigger (TODO)
      operationId: delete-manage-triggers
      parameters:
        - name: sessionID
          in: header
          required: true
          schema:
            type: string
        - name: triggerID
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation

  /manage-actions:
    get:
      tags:
        - Services Management
      summary: The OSP requests the set of already specified actions
      description: The OSP requests the set of already specified actions (TODO)
      operationId: get-manage-actions
      parameters:
        - name: sessionID
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Action"

    post:
      tags:
        - Services Management
      summary: The OSP defines a new action service
      description: The OSP defines a new action service (TODO)
      operationId: post-manage-actions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAction'
      responses:
        '200':
          description: successful operation
    delete:
      tags:
        - Services Management
      summary: The OSP deletes an already defined action
      description: The OSP deletes an already defined action (TODO)
      operationId: delete-manage-actions
      parameters:
        - name: actionID
          in: cookie
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation

components:
  securitySchemes:
    auth:
      type: apiKey
      description: The cookie that is set after a succesfull call to the /login endpoint
      in: cookie
      name: __session

  schemas:
    Trigger:
      properties:
        id:
          type: string
          example: 637ccd4951cdf089ba2123be
        name:
          type: string
          example: Sensor detects movement
        description:
          type: string
          example: Fires when a SensorService sensor detects movement

    Action:
      type: object
      properties:
        id:
          type: string
          example: 6489ccd4951cdf089ba21288c
        name:
          type: string
          example: Send notification to mobile app
        description:
          type: string
          example: Send a push notification to the NotificationService mobile app

    Register:
      type: object
      properties:
        username:
          type: string
          example: "John71"
        email:
          type: string
          example: "Jhon71@gmail.com"
        password:
          type: string
          example: "MyPrivatePassword"

    Login:
      type: object
      properties:
        username:
          type: string
          example: "John71"
        password:
          type: string
          example: "MyPrivatePassword"

    Rules:
      type: array
      items:
        type: object
        properties:
          Trigger:
            $ref: '#/components/schemas/Trigger'
          Action:
            $ref: '#/components/schemas/Action'

    NewRule:
      type: object
      properties:
        Trigger:
          $ref: '#/components/schemas/Trigger'
        Action:
          $ref: '#/components/schemas/Action'


    Service:
      type: object
      properties:
        id:
          type: string
          example: "SomeServiceID"

    UserService:
      type: object
      properties:
        id:
          type: string
          example: "SomeServiceID"
        authorized:
          type: boolean
          example: "True"

    Permission:
      type: object
      properties:
        id:
          type: string
          example: "SomePermissionID"


    NewAuthorization:
      type: object
      properties:
        Service:
          $ref: '#/components/schemas/Service'
        Permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'


    NewService:
      type: object
      properties:
        Service:
          $ref: '#/components/schemas/Service'
        Endpoint:
          type: string
          example: "/some_endpoint"
        ClientId:
          type: string
          example: "SomeClientID"
        Secret:
          type: string
          example: "SomeSecret"

    TriggerData:
      type: object
      properties:
        Data:
          type: string
          example: "To define"

    NewAction:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Action'
        endpoint:
          type: string
          example: "SomeEndPoint"
