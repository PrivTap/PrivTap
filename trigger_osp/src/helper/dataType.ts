/**
 * Enumeration containing data types that can be generated by triggers
 * and consumed by actions.
 */
import { checkURL } from "./misc";

export enum DataType {
    Text = "text",
    Image = "image/url",
    URL = "other/url",
    Date = "date",
    Number = "number",
    Array = "aggregate/array"
}

export class DataTypeUtil {
    public static isSupported(externalObject: unknown): boolean {
        return this.getSupportedType(externalObject) != undefined;
    }

    public static getSupportedType(externalObject: unknown): DataType | undefined {
        if (Array.isArray(externalObject)) {
            return DataType.Array;
        } else if (externalObject instanceof String || typeof externalObject === "string") {
            //Text, Image URl or Video URL?
            //Is the string a URL?
            const externalString = externalObject as string;
            if (checkURL(externalString)) {
                //To check the URL type we look for the file extension -> if it is a known image file extension then we recognize it as an image, otherwise we vall back to a generic url
                const regex = /.*\.(gif|jpg|jpeg|tiff|png)/i
                if (regex.test(externalString)) {
                    return DataType.Image;
                }
                return DataType.URL;
            }
            return DataType.Text;
        } else if (externalObject instanceof Date) {
            return DataType.Date;
        } else if (externalObject instanceof Number || typeof externalObject === "number") {
            return DataType.Number;
        } else {
            return undefined;
        }
    }
}